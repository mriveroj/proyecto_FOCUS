library(devtools)
install_url("http://cran.r-project.org/src/contrib/Archive/sentiment/sentiment_0.2.tar.gz")
install.packages("Rstem")
library(Rstem)
library(devtools)
install_url("http://cran.r-project.org/src/contrib/Archive/sentiment/sentiment_0.2.tar.gz")
require(sentiment)
# Cargamos las librerías necesarias
library(tidyverse)
library(RColorBrewer)
library(plyr)
library(ggplot2)
library(rtweet)
library(wordcloud)
library(stringr)
library(tm)
classify_emotion()
sentiment:::classify_emotion()
library(sentiment)
require(sentiment)
library(tidyverse)
library(RColorBrewer)
library(plyr)
library(ggplot2)
library(rtweet)
library(wordcloud)
library(stringr)
library(tm)
library(devtools)
#### Cargamos los datos ####
data <- readRDS("restaurant_trip_advisor.rds")
View(data)
str(data)
class(data)
View(data)
View(data)
# Cambiamos nombres de columna para hacerlos más legibles
colnames(data) <- c("id", "cocina","nombre", "rango_precios", "calificacion", "numero_calificaciones",
"direccion", "horario", "comentarios", "ranking")
# Pasamos de character a string la columna Calificación
data$calificacion <- gsub(",", ".", data$calificacion)
data$calificacion <- as.double(data$calificacion)
str(data)
# Corregimos número de calificaciones para dejarlas como numéricas
unique(data$numero_calificaciones)
data$numero_calificaciones <- gsub("opiniones", "", data$numero_calificaciones)
data$numero_calificaciones <- gsub("opinión", "", data$numero_calificaciones)
data$numero_calificaciones <- str_trim(data$numero_calificaciones)
unique(data$numero_calificaciones)
data$numero_calificaciones[c(331, 602, 723)] <- "1371"
View(data)
#### Cargamos los datos ####
data <- readRDS("restaurant_trip_advisor.rds")
str(data)
class(data)
# Cambiamos nombres de columna para hacerlos más legibles
colnames(data) <- c("id", "cocina","nombre", "rango_precios", "calificacion", "numero_calificaciones",
"direccion", "horario", "comentarios", "ranking")
# Pasamos de character a string la columna Calificación
data$calificacion <- gsub(",", ".", data$calificacion)
View(data)
str(data)
datos <- readRDS("restaurant_trip_advisor.rds")
library(tidyverse)
dat<- data.frame(id=datos$id, comentarios= datos$Comentarios)
dat<-dat %>%
separate(comentarios,c("coment1","coment2","coment3","coment4","coment5","coment6",
"coment7","coment8","coment9","coment10","coment11",
"coment12","coment13","coment14","coment15","coment16",
"coment17","coment18","coment19","coment20","coment21","coment22",
"coment23","coment24","coment25","coment26","coment27"
,"coment29","coment30","coment31"),
sep= "~")
library(tidyverse)
install.packages("tidyverse")
seq <- seq(from=2, to=30, by=2)
seq
library(tidyverse)
dat<- data.frame(id=datos$id, comentarios= datos$Comentarios)
dat<-dat %>%
separate(comentarios,c("coment1","coment2","coment3","coment4","coment5","coment6",
"coment7","coment8","coment9","coment10","coment11",
"coment12","coment13","coment14","coment15","coment16",
"coment17","coment18","coment19","coment20","coment21","coment22",
"coment23","coment24","coment25","coment26","coment27"
,"coment29","coment30","coment31"),
sep= "~")
#write.csv(dat, "comentarios_separados.csv")
??separate
library(tidyr)
library(tidyr)
library(RcppEigen)
detach("package:RcppEigen", unload = TRUE)
install.packages("RcppEigen")
library(RcppEigen)
library(Rcpp)
# Cargamos las librerías necesarias
library(tidyverse)
data$calificacion <- as.double(data$calificacion)
comentarios <- read.csv("comentarios_separados.csv") %>% select(-1)
View(comentarios)
### Corregimos los comentarios
comentarios <- gsub("(RT|via)((?:\\b\\W*@\\w+)+)", "",comentarios) # Quitamos Retweets
comentarios<- gsub("@\\w+", "", comentarios) # Quitamos mencion a personas
comentarios<-  gsub("\\bhttp[a-zA-Z0-9]*\\b", "", comentarios) # Quitamos los links html
comentarios <- gsub("[^a-zA-Z0-9 ]", "", comentarios) # Se quietan carácteres no alfanuméricos
comentarios<- gsub("[[:punct:]]", "", comentarios) # Quitamos puntuación
comentarios <- gsub("amp ", "", comentarios)# Quitamos la palabra amp
comentarios <-  gsub("\\btco[a-zA-Z0-9]*\\b", "", comentarios) # Quitamos los Toc
comentarios <- iconv(comentarios, 'UTF-8', 'ASCII') # Quitamos los emojis
comentarios <- gsub("[ \t]{2,}", "", comentarios) # Quitamos tabuladores
comentarios <- gsub("^\\s+|\\s+$", "", comentarios) # Quitamos tabuladores x2
comentarios <- tolower(comentarios) # Pasamos todo a minúsculas
corpus_restaurantes <- Corpus(VectorSource(comentarios))
library(tidyverse)
library(RColorBrewer)
library(plyr)
library(ggplot2)
library(rtweet)
library(wordcloud)
library(stringr)
library(tm)
library(devtools)
corpus_restaurantes <- Corpus(VectorSource(comentarios))
inspect(corpus_restaurantes[1:3])
corpus_restaurantes_limpio <- tm_map(corpus_restaurantes, removeWords, stopwords(kind = "es"))
# Hacemos un Term-document-matrix (tdm) y un Document-Term-Matrix (dtm)
restaurantes_tdm <- TermDocumentMatrix(corpus_restaurantes_limpio, control = list(stopwords = TRUE)) %>% as.matrix()
restaurantes_dtm <- DocumentTermMatrix(corpus_restaurantes_limpio, control = list(minWordLength = 1, stopwords = TRUE))
inspect(restaurantes_dtm) # Permite ver cuantas veces aparecen las palabras en el documento
# Hacemos el stem
restaurantes_stem <- tm_map(corpus_restaurantes_limpio, stemDocument)
install.packages("SnowballC")
library(SnowballC)
# Hacemos el stem
restaurantes_stem <- tm_map(corpus_restaurantes_limpio, stemDocument)
inspect(restaurantes_stem[1:5])
head(findFreqTerms(restaurantes_dtm, lowfreq=10), 40)
findAssocs(restaurantes_dtm, 'comida', 0.90)
## Clasificación de emociones
restaurantes_emotions <- classify_emotion(comentarios, algorithm="bayes", prior=1.0)
View(data)
#### Cargamos los datos ####
data <- readRDS("restaurant_trip_advisor.rds")
View(data)
View(data)
